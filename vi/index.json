[
{
	"uri": "/vi/1-preparation/",
	"title": "Chuẩn Bị Tài Nguyên",
	"tags": [],
	"description": "",
	"content": "Trong chương này, chúng ta sẽ lần lượt thực hiện:\nTạo 1 VPC với 2 Public Subnet, 2 Public Subnet Tạo 1 Security Group cho EC2 Instance, 1 Security Group cho PostgreSQL và RDS Proxy Tạo 1 IAM Role cho EC2 Instance Chỉnh sửa IAM Role cho EC2 Instance Note: Tất cả các tài nguyên trong bài workshop này sử dụng Region Singapore (ap-southeast-1) Nội dung 1.1 Tạo VPC\n1.2 Tạo Security Group\n1.3 Tạo IAM Role cho EC2\n1.4 Tạo EC2 Instance\n1.5 Modify IAM Role cho EC2\n1.6 Kết nối EC2 Instance\n"
},
{
	"uri": "/vi/7-hafailovers/7.1-testscript/",
	"title": "Download Test Script",
	"tags": [],
	"description": "",
	"content": "Trình tự thực hiện Quay trở lại cửa sổ MobaXterm\nCài đặt trình quản lý gói Pip cho python3 curl -sS https://bootstrap.pypa.io/get-pip.py | python3 Cài đặt thư viện psycopg2 để kết nối với PostgreSQL pip install psycopg2-binary Tải Failover Test Script wget https://ws-assets-prod-iad-r-iad-ed304a55c2ca1aee.s3.us-east-1.amazonaws.com/2a5fc82d-2b5f-4105-83c2-91a1b4d7abfe/simple_failover.py "
},
{
	"uri": "/vi/6-multiplexing/6.1-dbendpoint/",
	"title": "Kiểm tra với DB Endpoint",
	"tags": [],
	"description": "",
	"content": "Trình tự thực hiện Quay trở lại cửa sổ MobaXterm\nKiểm tra max_connections của PostgreSQL. Ta thấy kết quả là 403 (Giá trị này sẽ khác nhau tùy thuộc vào Instance Types của DB) psql -h $DBENDP -d postgres -c \u0026#34;SHOW max_connections\u0026#34; Khởi tạo pgbench tại Database postgres pgbench -i -h $DBENDP -d postgres Thực hiện tiến trình pgbench với DB Endpoint. Chờ cho đến khi bài test thực hiện xong (300s). Trong đó: -c 600: Tạo 600 kết nối đồng thời đến PostgreSQL, con số chúng ta lựa chọn sẽ lớn hơn max_connections ở trên 403 -T 300: Thời gian chúng ta chạy test, đơn vị (s) Chuyển hướng tất cả đầu ra sang một tệp có tên temp-op1 pgbench -h $DBENDP -d postgres -c 600 -n --select-only -T 300 -C -P 1 \u0026gt; temp-op1 2\u0026gt;\u0026amp;1 Thực hiện các câu lệnh dưới đây. Các thông báo FATAL cho biết giới hạn max_connections đang bị tấn công vì pgbench đang cố gắng tạo nhiều kết nối hơn giới hạn.\nChúng ta thấy có 204 kết nối bị lỗi. Điều này chứng tỏ số lượng kết nối tối đa mà PostgreSQL (600-204)=396 gần xấp xỉ giá trị max_connections.\nDo bản thân PostgreSQL đã giữ lại một số kết nối cho riêng nó. Bạn có thể xem thêm các thông số cài đặt tại đây runtime-config-connection grep \u0026#34;FATAL\u0026#34; temp-op1 | head\rgrep \u0026#34;FATAL\u0026#34; temp-op1 | wc -l Kết luận:\nKhi kết nối trực tiếp với điểm cuối của phiên bản DB, giá trị max_connections được áp dụng làm giới hạn kết nối và mọi máy khách sẽ không thể tạo kết nối mới nếu đạt đến giới hạn đó.\n"
},
{
	"uri": "/vi/",
	"title": "RDS Proxy for PostgreSQL",
	"tags": [],
	"description": "",
	"content": "RDS Proxy for PostgreSQL Trong bài workshop này, chúng ta sẽ cùng tìm hiểu các bước để tạo một RDS Proxy và thực hiện các bài Test để hiểu chức năng của nó\nKiến trúc của bài workshop Nội dung 1. Chuẩn Bị Tài Nguyên\n2. Tạo RDS PostgreSQL\n3. Lưu trữ Secret\n4. Tạo IAM Role cho RDS Proxy\n5. Tạo RDS Proxy\n6. Kiểm tra Multiplexing\n7. Kiểm tra Failover\n8. Dọn Dẹp Tài Nguyên\n"
},
{
	"uri": "/vi/4-roleforproxy/4.1-createpolicy/",
	"title": "Tạo Policy",
	"tags": [],
	"description": "",
	"content": "Trình tự thực hiện Quay trở lại cửa sổ MobaXterm Lấy thông tin Secret ARN của secretPostgresqlUser trong AWS Secrets Manager. Lưu lại thông tin này. aws secretsmanager describe-secret --secret-id secretPostgresqlUser --region ap-southeast-1 --query \u0026#34;ARN\u0026#34; --output text Lấy thông tin Key ARN của aws/secretsmanager trong AWS KMS. Key này là Key mặc định chúng ta đã chọn để Encrypt Secret ở chương 3. Lưu lại thông tin này. aws kms describe-key --key-id alias/aws/secretsmanager --query \u0026#34;KeyMetadata.Arn\u0026#34; --output text Truy cập Giao diện quản trị dịch vụ IAM Chọn Policies Chọn Create policy Chọn JSON Copy và dán đoạn mã JSON sau đây để định nghĩa các quyền cho Policy Thay \u0026lt;CHANGE_YOUR_SECRET_ARN_HERE\u0026gt; bằng Secret ARN ở bước trên Thay \u0026lt;CHANGE_YOUR_KEY_ARN_HERE\u0026gt; bằng Key ARN ở bước trên Chọn Next {\r\u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;,\r\u0026#34;Statement\u0026#34;: [\r{\r\u0026#34;Sid\u0026#34;: \u0026#34;VisualEditor0\u0026#34;,\r\u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,\r\u0026#34;Action\u0026#34;: \u0026#34;secretsmanager:GetSecretValue\u0026#34;,\r\u0026#34;Resource\u0026#34;: \u0026#34;\u0026lt;CHANGE_YOUR_SECRET_ARN_HERE\u0026gt;\u0026#34;\r},\r{\r\u0026#34;Sid\u0026#34;: \u0026#34;VisualEditor1\u0026#34;,\r\u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,\r\u0026#34;Action\u0026#34;: \u0026#34;kms:Decrypt\u0026#34;,\r\u0026#34;Resource\u0026#34;: \u0026#34;\u0026lt;CHANGE_YOUR_KEY_ARN_HERE\u0026gt;\u0026#34;,\r\u0026#34;Condition\u0026#34;: {\r\u0026#34;StringEquals\u0026#34;: {\r\u0026#34;kms:ViaService\u0026#34;: \u0026#34;secretsmanager.ap-southeast-1.amazonaws.com\u0026#34;\r}\r}\r}\r]\r} Tại mục Policy name, nhập FCJ-Proxy-Policy Chọn Create Policy Các quyền được cấp cho chính sách FCJ-Proxy-Policy\n+Được phép GetSecretValue đối với secretPostgresqlUser được lưu trữ trong AWS Secrets Manager\n+Cho phép dịch vụ AWS Secrets Manager sử dụng aws/secretsmanager để thực hiện thao tác Decrypt\n"
},
{
	"uri": "/vi/2-rdspostgresql/2.1-createpostgres/",
	"title": "Tạo RDS PostgreSQL",
	"tags": [],
	"description": "",
	"content": "Trình tự thực hiện Truy cập Giao diện quản trị dịch vụ RDS Chọn Databases Chọn Create database Tại trang Create database Tại phần Choose a database creation method Tại mục Choose a database creation method, chọn Standard create Tại phần Engine options Tại mục Engine type, chọn PostgreSQL Tại mục Engine Version, chọn PostgreSQL 14.9-R2 Tại phần Templates Chọn Dev/Test Tại phần Availability and durability Chọn Multi-AZ DB instance Tại phần Settings Tại mục DB cluster identifier, nhập postgresql Tại mục Master username, nhập postgres Tại mục Master password, nhập postgres Tại mục Confirm master password, nhập postgres Tại phần Instance configuration Chọn Burstable classes (includes t classes), sau đó chọn db.t3.medium Tại phần Connectivity Tại mục Compute resource, chọn Don’t connect to an EC2 compute resource Tại mục Virtual private cloud (VPC), chọn FCJ-vpc Tại mục DB subnet group, chọn Create new DB Subnet Group Tại mục VPC security group (firewall), chọn Choose existing, sau đó chọn DB-Security-Group Cuộn chuột xuống dưới cùng, chọn Create database, quá trình tạo DB bắt đầu Tại trang Databases Chờ cho đến khi Status của postgresql chuyển sang Available Chọn postgresql Lưu lại giá trị DB Endpoint để chuẩn bị cho bước sau "
},
{
	"uri": "/vi/5-rdsproxy/5.1-createproxy/",
	"title": "Tạo RDS Proxy",
	"tags": [],
	"description": "",
	"content": "Trình tự thực hiện Truy cập Giao diện quản trị dịch vụ RDS Chọn Proxies Chọn Create proxy Tại trang Create proxy Tại phần Proxy configuration Tại mục Engine family, chọn PostgreSQL Tại mục Proxy identifier, nhập rds-proxy Tại phần Target group configuration Tại mục Database, chọn postgresql Tại phần Authentication Tại mục Identity and access management (IAM) role, chọn FCJ-Proxy-Role Tại mục Secrets Manager secrets, chọn secretPostgresqlUser Tại phần Connectivity, chọn Additional connectivity configuration Tại mục VPC security group, chọn Choose existing Tại mục Existing VPC security groups, chọn DB-Security-Group Cuộn chuột xuống dưới cùng, chọn Create proxy Tại trang Proxies Chờ cho đến khi Status của rds-proxy chuyển sang Available Chọn rds-proxy, lưu lại giá trị Proxy Endpoint để chuẩn bị cho bước sau "
},
{
	"uri": "/vi/1-preparation/1.1-createvpc/",
	"title": "Tạo VPC ",
	"tags": [],
	"description": "",
	"content": "Trình tự thực hiện Truy cập Giao diện quản trị dịch vụ VPC Chọn Your VPC Chọn Create VPC Tại trang Create VPC Tại mục Resources, chọn VPC and more Tại mục Name tag, nhập FCJ Tại mục Number of Availability Zones (AZs), chọn 2 Tại mục Number of public subnets, chọn 2 Tại mục Number of private subnets, chọn 2 Chọn Create VPC Chờ cho đến khi VPC và các thành phần tạo xong Chọn View VPC Thành công tạo VPC Tại giao diện VPC Chọn Subnets Chọn FCJ-subnet-public1-ap-southeast-1a Chọn Actions, sau đó chọn Edit subnet settings Tại trang Edit subnet settings Tại mục Auto-assign IP settings, tích chọn Enable auto-assign public IPv4 address Chọn Save "
},
{
	"uri": "/vi/2-rdspostgresql/2.2-installclient/",
	"title": "Cài đặt PostgreSQL Client",
	"tags": [],
	"description": "",
	"content": "Trình tự thực hiện Quay trở lại cửa sổ MobaXterm Cài đặt PostgreSQL Client sudo amazon-linux-extras install -y postgresql14 Cài đặt postgresql-contrib. Chứa pgbench mà chúng ta sẽ dùng để Test ở những chương sau sudo yum install -y postgresql-contrib Export Environment Variables. Thay đổi \u0026lt;CHANGE_YOUR_DB_ENDPOINT_HERE\u0026gt; bằng RDS PostgreSQL Endpoint chúng ta đã lưu lại ở bước 2.1 Mục đích: đăng nhập RDS PostgreSQL không cần nhập User và Password. Trong đó: PGUSER: RDS PostgreSQL User PGPASSWORD: RDS PostgreSQL Password DBENDP: RDS PostgreSQL Endpoint (DB Endpoint) echo \u0026#34;export PGUSER=postgres\u0026#34; \u0026gt;\u0026gt; /home/ec2-user/.bashrc\recho \u0026#34;export PGPASSWORD=postgres\u0026#34; \u0026gt;\u0026gt; /home/ec2-user/.bashrc\recho \u0026#34;export DBENDP=\u0026lt;CHANGE_YOUR_POSTGRESQL_ENDPOINT_HERE\u0026gt;\u0026#34; \u0026gt;\u0026gt; /home/ec2-user/.bashrc\rsource ~/.bashrc Đăng nhập vào RDS PostgreSQL với host là DB Endpoint\nĐăng nhập thành công bằng DB Endpoint như hình bên dưới psql -h $DBENDP -d postgres In ra các thông tin gồm user, database name hiện tại SELECT current_user, current_database(); Thoát khỏi RDS PostgreSQL exit "
},
{
	"uri": "/vi/5-rdsproxy/5.2-connectproxy/",
	"title": "Kết nối RDS Proxy",
	"tags": [],
	"description": "",
	"content": "Trình tự thực hiện Quay trở lại cửa sổ MobaXterm Export Environment Variables. Thay đổi \u0026lt;CHANGE_YOUR_PROXY_ENDPOINT_HERE\u0026gt; bằng Proxy Endpoint chúng ta đã lưu lại ở bước 5.1 echo \u0026#34;export PRXENDP=\u0026lt;CHANGE_YOUR_PROXY_ENDPOINT_HERE\u0026gt;\u0026#34; \u0026gt;\u0026gt; /home/ec2-user/.bashrc\rsource ~/.bashrc Đăng nhập vào RDS PostgreSQL với host là Proxy Endpoint\nĐăng nhập thành công bằng Proxy Endpoint như hình bên dưới psql -h $PRXENDP -d postgres Thoát khỏi RDS PostgreSQL exit "
},
{
	"uri": "/vi/7-hafailovers/7.2-dbendpoint/",
	"title": "Kiểm tra với DB Endpoint",
	"tags": [],
	"description": "",
	"content": "Trình tự thực hiện Quay trở lại cửa sổ MobaXterm. Duplicate thêm 1 cửa sổ Terminal\nTại cửa sổ Terminal 1. Chạy Failover Test Script với DB Endpoint python3 simple_failover.py -e $DBENDP -u $PGUSER -p $PGPASSWORD -d postgres Tại cửa sổ Terminal 2. Tiến hành reboot postgresql DB để kiểm tra tín năng chuyển đổi dự phòng aws rds reboot-db-instance --db-instance-identifier postgresql --region ap-southeast-1 --force-failover --query \u0026#39;DBInstance.DBInstanceStatus\u0026#39; Sau một lúc, chúng ta thấy có nhiều lỗi ngoại lệ xảy ra do quá trình chuyển đổi dự phòng của postgresql "
},
{
	"uri": "/vi/6-multiplexing/6.2-proxyendpoint/",
	"title": "Kiểm tra với Proxy Endpoint",
	"tags": [],
	"description": "",
	"content": "Kiểm tra với Proxy Endpoint Quay trở lại cửa sổ MobaXterm\nThực hiện tiến trình pgbench với Proxy Endpoint. Chờ cho đến khi bài test thực hiện xong (900s). Trong đó: -c 3000: Tạo 3000 kết nối đồng thời đến PostgreSQL, con số chúng ta lựa chọn sẽ lớn hơn max_connections rất nhiều -T 900: Thời gian chúng ta chạy test, đơn vị (s). Đủ lâu để Cloudwatch ghi nhận các sự kiện một cách đầy đủ. Chuyển hướng tất cả đầu ra sang một tệp có tên temp-op2 pgbench -h $PRXENDP -d postgres -c 3000 -n --select-only -T 900 -C -P 1 \u0026gt; temp-op2 2\u0026gt;\u0026amp;1 Monitor with CloudWatch Metrics Truy cập Giao diện quản trị dịch vụ CloudWatch Chọn All metrics Chọn RDS Chọn EndpointName, ProxyName Tại trang EndpointName, ProxyName\nChọn Metric name: ClientConnections, ProxyName: rds-proxy Chọn RDS, sau đó chọn ProxyName, TargetGroup, TargetRole\nTại trang ProxyName, TargetGroup, TargetRole Chọn Metric name: MaxDatabaseConnectionsAllowed, ProxyName: rds-proxy Chọn Metric name: DatabaseConnections, ProxyName: rds-proxy Chọn Graphed metrics Tại mục Statistic, chọn Sum Tại mục Custom, chọn 15m Tiến hành Format để biểu đồ trong dễ nhìn hơn Change Label Name Drag Down Chọn điểm cao nhất ClientConnections: 2992 xấp xỉ 3000 connections chúng ta đã định nghĩa khi chạy câu lệnh pgbench phía trên MaxDatabaseConnectionsAllowed: 396, số lượng kết nối tối đa mà PostgreSQL cho phép DatabaseConnections: 9 Kết luận:\nViệc kết nối đến PostgreSQL thông qua RDS Proxy cho chúng ta một kết quả rất tốt. Với gần 3000 phía Clients nhưng thông qua Proxy chúng ta chỉ cần 9 kết nối tới PostgreSQL.\nBằng cách này RDS Proxy có thể giúp mở rộng quy mô ứng dụng và cũng ngăn chặn việc nhận được lỗi \u0026ldquo;Too many connections\u0026rdquo; từ DB.\n"
},
{
	"uri": "/vi/4-roleforproxy/4.2-createrole/",
	"title": "Tạo IAM Role",
	"tags": [],
	"description": "",
	"content": "Trình tự thực hiện Tại Giao diện quản trị dịch vụ IAM Chọn Roles Chọn Create role Tại trang Select trusted entity Chọn Custom trust policy Copy và dán đoạn Trust Policy dưới đây, sau đó chọn Next {\r\u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;,\r\u0026#34;Statement\u0026#34;: [\r{\r\u0026#34;Sid\u0026#34;: \u0026#34;\u0026#34;,\r\u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,\r\u0026#34;Principal\u0026#34;: {\r\u0026#34;Service\u0026#34;: \u0026#34;rds.amazonaws.com\u0026#34;\r},\r\u0026#34;Action\u0026#34;: \u0026#34;sts:AssumeRole\u0026#34;\r}\r]\r} Tại trang Add permissions Tại ô tìm kiếm, nhập FCJ-Proxy-Policy Tích chọn FCJ-Proxy-Policy Chọn Next Tại trang Name, review, and create Tại mục Role name, nhập FCJ-Proxy-Role Chọn Create Role "
},
{
	"uri": "/vi/2-rdspostgresql/",
	"title": "Tạo RDS PostgreSQL",
	"tags": [],
	"description": "",
	"content": "\nTrong chương này, chúng ta sẽ lần lượt tìm hiểu:\nCách tạo 1 RDS PostgreSQL Cách cài đặt PostgreSQL Client và sử dụng nó để kết nối với RDS PostgreSQL Nội dung 2.1 Tạo RDS PostgreSQL\n2.2 Cài đặt PostgreSQL Client\n"
},
{
	"uri": "/vi/1-preparation/1.2-createsg/",
	"title": "Tạo Security Group",
	"tags": [],
	"description": "",
	"content": "Trình tự thực hiện Trong giao diện VPC Chọn Security groups Chọn Create security group Tạo Security cho EC2 Instance Tại mục Security group name, nhập EC2-Security-Group Tại mục Description, nhập Security Group for FCJ-Instance Tại mục VPC, click dấu X để chọn FCJ-vpc Trong phần Inbound rule, chọn Add rule thêm 1 Inbound Rule Type chọn SSH, Source chọn Anywhere (0.0.0.0/0) Kéo xuống dưới cùng, chọn Create security group Tạo Security Group cho RDS PostgreSQL và RDS Proxy Tại mục Security group name, nhập DB-Security-Group Tại mục Description, nhập Security Group for RDS PostgreSQL and RDS Proxy Tại mục VPC, click dấu X để chọn FCJ-vpc Trong phần Inbound rule, chọn Add rule thêm 1 Inbound Rule Type chọn PostgreSQL, Source chọn EC2-Security-Group Kéo xuống dưới cùng, chọn Create security group Tại giao diện DB-Security-Group vừa tạo xong, chọn Edit inbound rules Tại giao diện Edit inbound rules Chọn Add rule thêm 1 Inbound Rule Type chọn PostgreSQL, Source chọn DB-Security-Group (Tham chiếu đến Security Group của chính nó) Kéo xuống dưới cùng, chọn Save rules Thành công tạo 2 Security Group "
},
{
	"uri": "/vi/7-hafailovers/7.3-proxyendpoint/",
	"title": "Kiểm tra với Proxy Endpoint",
	"tags": [],
	"description": "",
	"content": "Trình tự thực hiện Truy cập Giao diện quản trị dịch vụ RDS\nĐảm bảo rằng postgresql DB mục Status đã trở lại trạng thái Available do quá trình Test tín năng chuyển đổi dự phòng ở bước 7.2 Quay trở lại cửa sổ MobaXterm\nTại cửa sổ Terminal 1. Chạy Failover Test Script với Proxy Endpoint python3 simple_failover.py -e $PRXENDP -u $PGUSER -p $PGPASSWORD -d postgres Tại cửa sổ Terminal 2. Tiến hành reboot postgresql DB để kiểm tra tín năng chuyển đổi dự phòng aws rds reboot-db-instance --db-instance-identifier postgresql --region ap-southeast-1 --force-failover --query \u0026#39;DBInstance.DBInstanceStatus\u0026#39; Sau một lúc, chúng ta nhận thấy có ít lỗi ngoại lệ xảy ra trong quá trình chuyển đổi dự phòng của postgresql Kết luận:\nKhi RDS Proxy được sử dụng, ứng dụng sẽ phục hồi nhanh hơn và nhận được ít lỗi ngoại lệ hơn trong quá trình chuyển đổi dự phòng, điều này chứng tỏ RDS Proxy giúp các ứng dụng trở nên linh hoạt hơn trước các lỗi và khiến những lỗi này ít gây gián đoạn hơn.\nXin chúc mừng, bạn đã thực hiện xong bài workshop. Hãy dọn dẹp tài nguyên để tránh phát sinh thêm chi phí.\n"
},
{
	"uri": "/vi/3-secret/",
	"title": "Lưu trữ Secret ",
	"tags": [],
	"description": "",
	"content": "\nTrong bước này, chúng ta sẽ tìm hiểu các bước để Lưu trữ một Secret cho RDS PostgreSQL trong AWS Secrets Manager\nTrình tự thực hiện Truy cập Giao diện quản trị dịch vụ AWS Secrets Manager Chọn Store a new secret Tại trang Choose secret type Tại phần Secret type, chọn Credentials for Amazon RDS database Tại phần Credentials Tại mục User name, nhập postgres Tại mục Password, nhập postgres Tại phần Encryption key, để mặc định aws/secretsmanager Tại phần Database, chọn postgresql Chọn Next Tại trang Configuration secret Tại mục Secret name, nhập secretPostgresqlUser Chọn Next Thành công lưu trữ Secret cho RDS PostgreSQL trong AWS Secrets Manager "
},
{
	"uri": "/vi/1-preparation/1.3-roleforec2/",
	"title": "Tạo IAM Role cho EC2",
	"tags": [],
	"description": "",
	"content": "Trình tự thực hiện Truy cập Giao diện quản trị dịch vụ IAM Chọn Roles Chọn Create Role Tại trang Select trusted entity\nTại mục Trusted entity type, chọn AWS service Tại mục Service or use case, chọn EC2 Cuộn chuột xuống dưới cùng, chọn Next Tại trang Add permissions\nTại mục Permissions policies, tích chọn AdministratorAccess Cuộn chuột xuống dưới cùng, chọn Next Tại trang Name, review, and create Tại mục Role name, nhập Admin-Role Chọn Create Role "
},
{
	"uri": "/vi/1-preparation/1.4-createec2/",
	"title": "Tạo EC2 Instance",
	"tags": [],
	"description": "",
	"content": "Trình tự thực hiện Truy cập Giao diện quản trị dịch vụ EC2 Chọn Key Pairs Chọn Create key pair Tại trang Create key pair Tại mục Name, nhập FCJ-keypair Tại mục Key pair type, chọn RSA Tại mục Private key file format chọn .pem Sau đó chọn Create key pair và lưu lại file FCJ-keypair.pem trên máy tính của bạn để sử dụng cho dịch vụ SSH ở những bước kế tiếp Thành công tạo FCJ-keypair Quay lại Giao diện quản trị dịch vụ EC2 Chọn Instances Chọn Launch instances Tại trang Launch an Instance Tại mục Name, nhập FCJ-Instance Tại mục Amazon Machine Image (AMI), chọn Amazon Linux 2 AMI Tại mục Instance type, chọn t2.micro Tại mục Key pair (login), chọn FCJ-keypair đã được tạo ở bước trước Tại phần Network settings chọn Edit Tại mục VPC, chọn FCJ-vpc Tại mục Subnet, chọn FCJ-subnet-public1-ap-southeast-1a Tại mục Auto-assign Public IP, chọn Enable, nếu không Enable thì bạn có thể đã bỏ qua Enable auto-assign public IPv4 address ở bước 1.1 Tại mục Firewall (security groups), chọn Select existing security group, và chọn EC2-Security-Group Kiểm tra lại thông tin và chọn Launch instance Thành công tạo EC2 Instance "
},
{
	"uri": "/vi/4-roleforproxy/",
	"title": "Tạo IAM Role cho RDS Proxy",
	"tags": [],
	"description": "",
	"content": "\nTrong chương này, chúng ta sẽ tạo một Policy và một Role cho RDS Proxy để đảm bảo các quyền cần thiết cho phép Proxy được phép truy cập vào RDS PostgreSQL\nNội dung 4.1 Tạo Policy\n4.2 Tạo IAM Role\n"
},
{
	"uri": "/vi/1-preparation/1.5-modifyrole/",
	"title": "Modify IAM Role cho EC2",
	"tags": [],
	"description": "",
	"content": "Trình tự thực hiện Tại Giao diện quản trị dịch vụ EC2 Chọn Instances, sau đó chọn FCJ-Instance Chọn Actions, chọn Security, sau đó chọn Modify IAM Role Tại trang Modify IAM Role Tại mục IAM Role, chọn Admin-Role đã được tạo ở bước 1.3 Chọn Update IAM Role Thành công Modify IAM Role cho FCJ-Instance Lưu lại giá trị Public IPv4 address để chuẩn bị cho bước kế tiếp\n"
},
{
	"uri": "/vi/5-rdsproxy/",
	"title": "Tạo RDS Proxy",
	"tags": [],
	"description": "",
	"content": "\nTrong chương này, chúng ta sẽ tìm hiểu các bước tạo 1 RDS Proxy và kết nối với RDS PostgreSQL thông qua Proxy này\nNội dung 5.1 Tạo RDS Proxy\n5.2 Kết nối RDS Proxy\n"
},
{
	"uri": "/vi/1-preparation/1.6-connectec2/",
	"title": "Kết nối EC2 Instance",
	"tags": [],
	"description": "",
	"content": "Trình tự thực hiện Chúng ta tiến hành thực hiện SSH vào EC2 Instance FCJ-Instance\nỞ đây chúng ta dùng MobaXterm. Bạn có thể xem chi tiết hơn Cách kết nối EC2 Instance bằng MobaXterm\nChọn Session Chọn SSH Tại mục Remote host, nhập Public IPv4 Address đã được lưu lại ở bước trước Chọn Specify username, nhập ec2-user Chọn Advange SSH Settings Chọn Use private key, sau đó truy xuất đường dẫn đến file FCJ-keypair.pem đã lưu ở bước 1.4 Chọn OK Kết nối thành công như hình bên dưới\n"
},
{
	"uri": "/vi/6-multiplexing/",
	"title": "Kiểm Tra Ghép Kênh",
	"tags": [],
	"description": "",
	"content": "Trong chương này, chúng ta sẽ thực hiện bài Test để Kiểm Tra Khả Năng Ghép Kênh của Proxy\nNội dung 6.1 Kiểm tra với DB Endpoint\n6.2 Kiểm tra với Proxy Endpoint\n"
},
{
	"uri": "/vi/7-hafailovers/",
	"title": "Kiểm tra Failover",
	"tags": [],
	"description": "",
	"content": "Trong chương này, chúng ta sẽ thực hiện bài Test để kiểm tra tác dụng của Proxy đối với quá trình chuyển đổi dự phòng (Failover)\nNội dung 7.1 Download Test Script\n7.2 Kiểm tra với DB Endpoint\n7.3 Kiểm tra với Proxy Endpoint\n"
},
{
	"uri": "/vi/8-cleanup/",
	"title": "Dọn Dẹp Tài Nguyên",
	"tags": [],
	"description": "",
	"content": "Chúng ta sẽ tiến hành các bước sau để xóa các tài nguyên chúng ta đã tạo trong workshop này.\nXóa RDS Proxy Truy cập Giao diện quản trị dịch vụ RDS\nChọn Proxies, chọn rds-proxy Chọn Actions, sau đó chọn Delete Thực hiện xác nhận (nếu có) để tiến hành Delete Xóa RDS PostgreSQL Chọn Databases, chọn postgresql Chọn Actions, sau đó chọn Delete Bỏ chọn Create final snapshot, tích chọn I acknowledge\u0026hellip; Nhập delete me, sau đó chọn Delete để tiến hành Delete Xóa Secret Truy cập Giao diện quản trị dịch vụ AWS Secrets Manager\nChọn Secret, chọn secretPostgresqlUser Chọn Actions, sau đó chọn Delete secret Nhập 7 days, sau đó chọn Schedule deletion để tiến hành Delete Xóa IAM Role Truy cập Giao diện quản trị dịch vụ IAM\nChọn Roles, chọn Admin-Role, FCJ-Proxy-Role, sau đó chọn Delete Thực hiện xác nhận (nếu có) để tiến hành Delete Xóa Policy Chọn Policies, tìm kiếm và chọn FCJ-Proxy-Policy, sau đó chọn Delete Thực hiện xác nhận (nếu có) để tiến hành Delete Xóa EC2 Instances Truy cập Giao diện quản trị dịch vụ EC2\nChọn Instances, chọn FCJ-Instance Chọn Instance state, chọn Terminate instance Thực hiện xác nhận (nếu có) để tiến hành Terminate Xóa Key pairs Chọn Key Pairs, chọn FCJ-keypair Chọn Actions, sau đó chọn Delete Thực hiện xác nhận (nếu có) để tiến hành Delete Xóa Security-Group (Sau khi đã xóa RDS PostgreSQL) Truy cập Giao diện quản trị dịch vụ VPC\nChọn Security Groups, chọn DB-Security-Group Chọn Actions, sau đó chọn Delete security groups Thực hiện xác nhận (nếu có) để tiến hành Delete Chọn EC2-Security-Group Chọn Actions, sau đó chọn Delete security groups Thực hiện xác nhận (nếu có) để tiến hành Delete Xóa VPC Chọn Your VPCs, chọn FCJ-vpc Chọn Actions, sau đó chọn Delete VPC Thực hiện xác nhận (nếu có) để tiến hành Delete "
},
{
	"uri": "/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]